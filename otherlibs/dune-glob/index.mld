{1 dune-glob - file globbing}

{2 Introduction}

A {e glob} is a way of referring to a set of files that match a certain
pattern, such as "files with the [.ml] extension" or "files with [test] in
their name".

The glob syntax is interpreted as follows:
- [\<char>] matches exactly [<char>], even if it's a special character
  ([*], [?], ...).
- [*] matches any sequence of characters, except if it comes first, in which
  case it matches any character that is not [.] followed by anything.
- [**] matches any character that is not [.] followed by anything, except if
  it comes first, in which case it matches anything.
- [?] matches any single character.
- [[<set>]] matches any character that is part of [<set>].
- [[!<set>]] matches any character that is not part of [<set>].
- [{<glob1>,<glob2>,...,<globn>}] matches any string that is matched by one of
  [<glob1>] [<glob2>] etc.

{t
	| Syntax            | Files matched                      | Files not matched       |
	|-------------------|------------------------------------|-------------------------|
	| [ x ]             | [ x ]                              | [ y ]                   |
	| [ \* ]            | [ * ]                              | [ x ]                   |
	| [ file*.txt ]     | [ file1.txt ], [ file2.txt ]       | [ f.txt ]               |
	| [ *.txt ]         | [ f.txt ]                          | [ .hidden.txt ]         |
	| [ a** ]           | [ aml ]                            | [ a.ml ]                |
	| [ ** ]            | [ a/b ], [ a.b ]                   | (none)                  |
	| [ a?.txt ]        | [ a1.txt ], [ a2.txt ]             | [ b1.txt ], [ a10.txt ] |
	| [ f[xyz].txt ]    | [ fx.txt ], [ fy.txt ], [ fz.txt ] | [ f2.txt ], [ f.txt ]   |
	| [ f[!xyz].txt ]   | [ f2.txt ], [ fa.txt ]             | [ fx.txt ], [ f.txt ]   |
	| [ a.{ml,mli} ]    | [ a.ml ], [ a.mli ]                | [ a.txt ], [ b.ml ]     |
	| [ ../a.{ml,mli} ] | [ ../a.ml ], [ ../a.mli ]          | [ a.ml ]                |
}

[dune-glob] exposes an abstraction so that we can refer to the first group as
[*.ml] and the second one as [*test*].

This library is used by Dune to implement this syntax in several places in
[dune] files, but it can be used in other contexts as well.

{2 Example}

This is an executable that takes a glob as a command line argument, and lists
the contents of the current directory that matches it:

{[
let () =
  let glob_string = Sys.argv.(1) in
  let glob = Dune_glob.V1.of_string glob_string in
  let files = Sys.readdir "." in
  ArrayLabels.iter files ~f:(fun n ->
    if Dune_glob.V1.test glob n then
      print_endline n)
]}

{2 API documentation}

The entry point for this library is {!Dune_glob.V1}.

{2 Note on stability}

This library is fairly stable, but does not come with strong stability
guarantees. In particular, while the module name suggests the API is versioned,
it is not in the strict sense.
