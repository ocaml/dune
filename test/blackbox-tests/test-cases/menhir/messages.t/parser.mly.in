%token <int> INT
%token PLUS MINUS TIMES DIV
%token LPAREN RPAREN
%token EOF

%left PLUS MINUS        /* lowest precedence */
%left TIMES DIV         /* medium precedence */
(*
%nonassoc UMINUS        /* highest precedence */
*)

%start <int> main
%on_error_reduce expr

%%

main:
| expr EOF { $1 }

expr:
| INT { $1 }
| LPAREN expr RPAREN { $2 }
| expr PLUS expr { $1 + $3 }
| expr MINUS expr { $1 - $3 }
| expr TIMES expr { $1 * $3 }
| expr DIV expr { $1 / $3 }
(*
| MINUS expr %prec UMINUS { - $2 }
*)
